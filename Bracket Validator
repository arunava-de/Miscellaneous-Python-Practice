class Stack(object):

    def __init__(self):
        """Initialize an empty stack"""
        self.items = []

    def push(self, item):
        """Push a new item onto the stack"""
        self.items.append(item)

    def pop(self):
        """Remove and return the last item"""
        # If the stack is empty, return None
        # (it would also be reasonable to throw an exception)
        if self.isempty():
            return None

        return self.items.pop()
    
    def isempty(self):
        if self.items == []:
            return True
        else:
            return False
        
    def peek(self):
        if self.isempty():
            return None
        else:
            return self.items[-1]
        
def is_valid(s):
    open_brackets = Stack()
    n = len(s)
    
    for i in range(n):
        if s[i] == "(" or s[i]=="{" or s[i]=="[":
            open_brackets.push(s[i])
        elif s[i] == ")": 
            if open_brackets.peek() == "(":
                open_brackets.pop()
            else:
                return False
        elif s[i] == "}": 
            if open_brackets.peek() == "{":
                open_brackets.pop()
            else:
                return False
        elif s[i] == "]": 
            if open_brackets.peek() == "[":
                open_brackets.pop()
            else:
                return False
        elif open_brackets.isempty():
            if s[i] == ")" or s[i] == "}" or s[i] == "]":
                return False
            
    if not open_brackets.isempty():
        return False
    else:
        return True
