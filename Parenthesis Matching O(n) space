class Stack(object):

    def __init__(self):
        """Initialize an empty stack"""
        self.items = []

    def push(self, item):
        """Push a new item onto the stack"""
        self.items.append(item)

    def pop(self):
        """Remove and return the last item"""
        # If the stack is empty, return None
        # (it would also be reasonable to throw an exception)
        if self.isempty():
            return None

        return self.items.pop()
    
    def isempty(self):
        if self.items == []:
            return True
        else:
            return False
        
def get_closing_paren(sentence, opening_paren_index):
    
    s = Stack()
    n = len(sentence)
    
    for i in range(n):
        if s.isempty() and sentence[i]==")":
            raise ValueError()
        if sentence[i]=="(":
            s.push(i)
        elif sentence[i]==")":
            out = s.pop()
            if out == opening_paren_index:
                return i
    if not s.isempty():
        raise ValueError()
        
    return -1
